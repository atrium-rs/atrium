// @generated - This file is generated by atrium-codegen. DO NOT EDIT.
//!Definitions for the `app.bsky.feed.threadgate` namespace.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub allow: core::option::Option<Vec<crate::types::Union<RecordAllowItem>>>,
    pub created_at: crate::types::string::Datetime,
    ///List of hidden reply URIs.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub hidden_replies: core::option::Option<Vec<String>>,
    ///Reference (AT-URI) to the post record.
    pub post: String,
}
pub type Record = crate::types::Object<RecordData>;
///Allow replies from actors you follow.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct FollowingRuleData {}
pub type FollowingRule = crate::types::Object<FollowingRuleData>;
///Allow replies from actors on a list.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ListRuleData {
    pub list: String,
}
pub type ListRule = crate::types::Object<ListRuleData>;
///Allow replies from actors mentioned in your post.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct MentionRuleData {}
pub type MentionRule = crate::types::Object<MentionRuleData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum RecordAllowItem {
    #[serde(rename = "app.bsky.feed.threadgate#mentionRule")]
    MentionRule(Box<MentionRule>),
    #[serde(rename = "app.bsky.feed.threadgate#followingRule")]
    FollowingRule(Box<FollowingRule>),
    #[serde(rename = "app.bsky.feed.threadgate#listRule")]
    ListRule(Box<ListRule>),
}
