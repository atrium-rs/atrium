// @generated - This file is generated by atrium-codegen. DO NOT EDIT.
//!Definitions for the `app.bsky.bookmark.defs` namespace.
///Object used to store bookmark data in stash.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct BookmarkData {
    ///A strong ref to the record to be bookmarked. Currently, only `app.bsky.feed.post` records are supported.
    pub subject: crate::com::atproto::repo::strong_ref::Main,
}
pub type Bookmark = crate::types::Object<BookmarkData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct BookmarkViewData {
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub created_at: core::option::Option<crate::types::string::Datetime>,
    pub item: crate::types::Union<BookmarkViewItemRefs>,
    ///A strong ref to the bookmarked record.
    pub subject: crate::com::atproto::repo::strong_ref::Main,
}
pub type BookmarkView = crate::types::Object<BookmarkViewData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum BookmarkViewItemRefs {
    #[serde(rename = "app.bsky.feed.defs#blockedPost")]
    AppBskyFeedDefsBlockedPost(Box<crate::app::bsky::feed::defs::BlockedPost>),
    #[serde(rename = "app.bsky.feed.defs#notFoundPost")]
    AppBskyFeedDefsNotFoundPost(Box<crate::app::bsky::feed::defs::NotFoundPost>),
    #[serde(rename = "app.bsky.feed.defs#postView")]
    AppBskyFeedDefsPostView(Box<crate::app::bsky::feed::defs::PostView>),
}
