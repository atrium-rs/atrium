// @generated - This file is generated by atrium-codegen. DO NOT EDIT.
//!Definitions for the `app.bsky.actor.status` namespace.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    pub created_at: crate::types::string::Datetime,
    ///The duration of the status in minutes. Applications can choose to impose minimum and maximum limits.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub duration_minutes: core::option::Option<core::num::NonZeroU64>,
    ///An optional embed associated with the status.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub embed: core::option::Option<crate::types::Union<RecordEmbedRefs>>,
    ///The status for the account.
    pub status: String,
}
pub type Record = crate::types::Object<RecordData>;
///Advertises an account as currently offering live content.
pub const LIVE: &str = "app.bsky.actor.status#live";
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum RecordEmbedRefs {
    #[serde(rename = "app.bsky.embed.external")]
    AppBskyEmbedExternalMain(Box<crate::app::bsky::embed::external::Main>),
}
