// This file is generated by atrium-codegen. DO NOT EDIT.
//!Definitions for the `com.atproto.repo.createRecord` namespace.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct Input {
    ///The NSID of the record collection.
    pub collection: String,
    ///The record itself. Must contain a $type field.
    pub record: crate::records::Record,
    ///The handle or DID of the repo (aka, current account).
    pub repo: crate::types::string::AtIdentifier,
    ///The Record Key.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub rkey: Option<String>,
    ///Compare and swap with the previous commit by CID.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub swap_commit: Option<String>,
    ///Can be set to 'false' to skip Lexicon schema validation of record data.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub validate: Option<bool>,
}
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct Output {
    pub cid: String,
    pub uri: String,
}
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "error", content = "message")]
pub enum Error {
    ///Indicates that 'swapCommit' didn't match current repo commit.
    InvalidSwap(Option<String>),
}
